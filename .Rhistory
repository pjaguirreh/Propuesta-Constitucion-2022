ind =  case_when(
str_detect(texto, "\n\n\n") ~ TRUE,
TRUE ~ FALSE),
texto2 = case_when(ind == TRUE ~ str_remove_all(texto, "CONSTITUCIÓN POLÍTICA DE LA REPÚBLICA")),
texto2 = str_squish(texto2)
) %>% View
df_const %>%
mutate(
ind =  case_when(
str_detect(texto, "\n\n\n") ~ TRUE,
TRUE ~ FALSE),
texto2 = case_when(ind == TRUE ~ str_remove_all(texto, "CONSTITUCIÓN POLÍTICA DE LA REPÚBLICA")),
texto2 = str_squish(texto2),
texto3 = unlist(strsplit(texto2, ' '))
) %>% View
strsplit(words, ' ')
df_const %>%
mutate(
ind =  case_when(
str_detect(texto, "\n\n\n") ~ TRUE,
TRUE ~ FALSE),
texto2 = case_when(ind == TRUE ~ str_remove_all(texto, "CONSTITUCIÓN POLÍTICA DE LA REPÚBLICA")),
texto2 = str_squish(texto2),
texto3 = strsplit(texto2, ' ')
) %>% View
unlist(strsplit(words, ' '))
?grep
grep('^[a-z]', vec, value = T)
df_const %>%
mutate(
ind =  case_when(
str_detect(texto, "\n\n\n") ~ TRUE,
TRUE ~ FALSE),
texto2 = case_when(ind == TRUE ~ str_remove_all(texto, "CONSTITUCIÓN POLÍTICA DE LA REPÚBLICA")),
texto2 = str_squish(texto2),
texto3 = strsplit(texto2, ' '),
texto4 = grep('^[a-z]', texto3, value = T)
) %>% View
words <- 'CAPITULO I - CONSTITUCIÓN POLÍTICA DE LA REPÚBLICA son Titulares y Su efectiva participación en el ejercicio y '
# split to vector of individual words
vec <- unlist(strsplit(words, ' '))
# just the capitalized ones
caps <- grep('^[a-z]', vec, value = T)
# assemble back to a single string, if you want
paste(caps, collapse=' ')
grep('^[a-z]', vec, value = T)
df_const %>%
mutate(
ind =  case_when(
str_detect(texto, "\n\n\n") ~ TRUE,
TRUE ~ FALSE),
texto2 = case_when(ind == TRUE ~ str_remove_all(texto, "CONSTITUCIÓN POLÍTICA DE LA REPÚBLICA")),
texto2 = str_squish(texto2),
texto3 = strsplit(texto2, ' '),
texto4 = list(grep('^[a-z]', texto3, value = T))
) %>% View
texto3 = list(unlist(strsplit(texto2, ' '))
df_const %>%
mutate(
ind =  case_when(
str_detect(texto, "\n\n\n") ~ TRUE,
TRUE ~ FALSE),
texto2 = case_when(ind == TRUE ~ str_remove_all(texto, "CONSTITUCIÓN POLÍTICA DE LA REPÚBLICA")),
texto2 = str_squish(texto2),
texto3 = list(unlist(strsplit(texto2, ' '))
)) %>% View
a <- df_const %>%
mutate(
ind =  case_when(
str_detect(texto, "\n\n\n") ~ TRUE,
TRUE ~ FALSE),
texto2 = case_when(ind == TRUE ~ str_remove_all(texto, "CONSTITUCIÓN POLÍTICA DE LA REPÚBLICA")),
texto2 = str_squish(texto2),
texto3 = list(unlist(strsplit(texto2, ' '))
))
View(a)
a
2+2
a$texto3[1]
View(df_const)
a$texto3[2]
a <- df_const %>%
mutate(
ind =  case_when(
str_detect(texto, "\n\n\n") ~ TRUE,
TRUE ~ FALSE),
texto2 = case_when(ind == TRUE ~ str_remove_all(texto, "CONSTITUCIÓN POLÍTICA DE LA REPÚBLICA")),
texto2 = str_squish(texto2),
texto3 = strsplit(texto2, ' '),
texto4 = grep('^[a-z]', text3, value = T))
a <- df_const %>%
mutate(
ind =  case_when(
str_detect(texto, "\n\n\n") ~ TRUE,
TRUE ~ FALSE),
texto2 = case_when(ind == TRUE ~ str_remove_all(texto, "CONSTITUCIÓN POLÍTICA DE LA REPÚBLICA")),
texto2 = str_squish(texto2),
texto3 = strsplit(texto2, ' '),
texto4 = grep('^[a-z]', texto3, value = T))
a <- df_const %>%
mutate(
ind =  case_when(
str_detect(texto, "\n\n\n") ~ TRUE,
TRUE ~ FALSE),
texto2 = case_when(ind == TRUE ~ str_remove_all(texto, "CONSTITUCIÓN POLÍTICA DE LA REPÚBLICA")),
texto2 = str_squish(texto2),
texto3 = strsplit(texto2, ' '),
texto4 = list(grep('^[a-z]', texto3, value = T))
)
a
a$texto3
a$texto3[1]
a$texto3[2]
a$texto3[7]
a$texto3[32]
a$texto4[32]
a
a %>% slice(1)
a <- df_const %>%
mutate(
ind =  case_when(
str_detect(texto, "\n\n\n") ~ TRUE,
TRUE ~ FALSE),
texto2 = case_when(ind == TRUE ~ str_remove_all(texto, "CONSTITUCIÓN POLÍTICA DE LA REPÚBLICA")),
texto2 = str_squish(texto2),
texto3 = strsplit(texto2, ' ')
)
a
a
a[1,5]
a[2,5]
a[1,5][[1]]
a[32,5][[1]]
grep('^[a-z]', a[32,5][[1]], value = T)
grep('^[a-z]', a[32,5][[1]][[1]], value = T)
paste(grep('^[a-z]', a[32,5][[1]][[1]], value = T), collapse = ' ')
paste(grep('^[a-z]', unlist(a[32,5][[1]]), value = T), collapse = ' ')
paste(grep('^[a-z]', unlist(unlist(a[32,5])), value = T), collapse = ' ')
a <- df_const %>%
mutate(
ind =  case_when(
str_detect(texto, "\n\n\n") ~ TRUE,
TRUE ~ FALSE),
texto2 = case_when(ind == TRUE ~ str_remove_all(texto, "CONSTITUCIÓN POLÍTICA DE LA REPÚBLICA")),
texto2 = str_squish(texto2),
texto3 = strsplit(texto2, ' '),
texto4 = paste(grep('^[a-z]', unlist(unlist(texto3)), value = T), collapse = ' ')
)
a %>% str
a
paste(grep('^[a-z]', unlist(unlist(a[c(32,37),5])), value = T), collapse = ' ')
paste(grep('^[a-z]', unlist(a[c(32,37),5]), value = T), collapse = ' ')
a <- df_const %>%
slice(7) %>%
mutate(
ind =  case_when(
str_detect(texto, "\n\n\n") ~ TRUE,
TRUE ~ FALSE),
texto2 = case_when(ind == TRUE ~ str_remove_all(texto, "CONSTITUCIÓN POLÍTICA DE LA REPÚBLICA")),
texto2 = str_squish(texto2),
texto3 = strsplit(texto2, ' '),
texto4 = paste(grep('^[a-z]', unlist(unlist(texto3)), value = T), collapse = ' ')
)
a
a <- df_const %>%
slice(37) %>%
mutate(
ind =  case_when(
str_detect(texto, "\n\n\n") ~ TRUE,
TRUE ~ FALSE),
texto2 = case_when(ind == TRUE ~ str_remove_all(texto, "CONSTITUCIÓN POLÍTICA DE LA REPÚBLICA")),
texto2 = str_squish(texto2),
texto4 = paste(grep('^[a-z]', unlist(unlist(strsplit(texto2, ' '))), value = T), collapse = ' ')
)
a
a$texto4
a$texto2
# Cargar paquetes
library(pdftools)
library(tidyverse)
library(openxlsx)
# Cargar texto desde pdf
txt <- pdf_text("texto-definitivo-propuesta-nueva-constitucion.pdf")
# Ordenar texto en un data frame
df_const <- tibble()
for (i in 9:178){
df_const <- bind_rows(df_const,
tibble(strsplit(txt[i], "\nA")[[1]]) %>%
rename(texto = 1) %>%
mutate(art = paste0("A", str_sub(texto, 1, 11)),
art = str_remove(art, "\n"),
texto = str_remove_all(texto, str_sub(texto, 1, 11)),
.before = 1)
)
print(i)
}
# Vínculo capítulo-artículo
cap_art <- df_const %>%
filter(str_detect(texto, "CAPÍTULO ") | str_detect(art, "Artículo ")) %>%
mutate(cap = case_when(
str_detect(texto, "CAPÍTULO ") ~ str_squish(str_remove_all(str_remove_all(texto, "\n"), "[0-9].*")))
) %>%
fill(cap, .direction = "down") %>%
select(cap, art) %>%
filter(str_detect(art, "Artículo ")) %>%
mutate(fila = row_number()) %>%
mutate(art = case_when(
str_remove(art, "Artículo ") == as.character(fila) ~ art,
TRUE ~ paste0("Artículo ", as.character(fila))
)) %>%
select(-fila) %>%
mutate(cap = case_when(
!str_detect(cap, "CONSTITUCIÓN POLÍTICA DE") ~ cap)
) %>%
fill(cap, .direction = "up")
cap_art
# Detalle de artículos
df_const2 <- df_const %>%
filter(str_detect(art, "Artículo")) %>%
separate(texto, into = c("num1", "num2", "num3", "num4",
"num5", "num6", "num7", "num8",
"num9", "num10"), sep = "[0-9]+\\.") %>%
mutate(fila = row_number()) %>%
mutate(art = case_when(
str_remove(art, "Artículo ") == as.character(fila) ~ art,
TRUE ~ paste0("Artículo ", as.character(fila))
)) %>%
select(-fila) %>%
pivot_longer(2:11, names_to = "num", values_to = "texto") %>%
mutate(texto = str_squish(texto)) %>%
filter(!is.na(texto)) %>%
filter(texto != "") %>%
group_by(art) %>%
mutate(num = row_number()) %>%
ungroup() %>%
mutate(texto = ifelse(str_sub(texto, 1, 1) == ".", str_sub(texto, 2, str_length(texto)), texto),
texto = str_squish(texto))
left_join(cap_art, df_const2) %>% View
propuesta_df <- left_join(cap_art, df_const2)
View(propuesta_df)
########## test
a <- df_const %>%
slice(37) %>%
mutate(
ind =  case_when(
str_detect(texto, "\n\n\n") ~ TRUE,
TRUE ~ FALSE),
texto2 = case_when(ind == TRUE ~ str_remove_all(texto, "CONSTITUCIÓN POLÍTICA DE LA REPÚBLICA")),
texto2 = str_squish(texto2),
texto4 = paste(grep('^[a-z]', unlist(unlist(strsplit(texto2, ' '))), value = T), collapse = ' ')
)
View(a)
########## test
a <- df_const %>%
#slice(37) %>%
mutate(
ind =  case_when(
str_detect(texto, "\n\n\n") ~ TRUE,
TRUE ~ FALSE),
texto2 = case_when(ind == TRUE ~ str_remove_all(texto, "CONSTITUCIÓN POLÍTICA DE LA REPÚBLICA")),
texto2 = str_squish(texto2),
texto4 = paste(grep('^[a-z]', unlist(unlist(strsplit(texto2, ' '))), value = T), collapse = ' ')
)
# Cargar paquetes
library(pdftools)
library(tidyverse)
library(openxlsx)
# Cargar texto desde pdf
txt <- pdf_text("texto-definitivo-propuesta-nueva-constitucion.pdf")
# Ordenar texto en un data frame
df_const <- tibble()
for (i in 9:178){
df_const <- bind_rows(df_const,
tibble(strsplit(txt[i], "\nA")[[1]]) %>%
rename(texto = 1) %>%
mutate(art = paste0("A", str_sub(texto, 1, 11)),
art = str_remove(art, "\n"),
texto = str_remove_all(texto, str_sub(texto, 1, 11)),
.before = 1)
)
print(i)
}
# Vínculo capítulo-artículo
cap_art <- df_const %>%
filter(str_detect(texto, "CAPÍTULO ") | str_detect(art, "Artículo ")) %>%
mutate(cap = case_when(
str_detect(texto, "CAPÍTULO ") ~ str_squish(str_remove_all(str_remove_all(texto, "\n"), "[0-9].*")))
) %>%
fill(cap, .direction = "down") %>%
select(cap, art) %>%
filter(str_detect(art, "Artículo ")) %>%
mutate(fila = row_number()) %>%
mutate(art = case_when(
str_remove(art, "Artículo ") == as.character(fila) ~ art,
TRUE ~ paste0("Artículo ", as.character(fila))
)) %>%
select(-fila) %>%
mutate(cap = case_when(
!str_detect(cap, "CONSTITUCIÓN POLÍTICA DE") ~ cap)
) %>%
fill(cap, .direction = "up")
# Detalle de artículos
df_const2 <- df_const %>%
filter(str_detect(art, "Artículo")) %>%
separate(texto, into = c("num1", "num2", "num3", "num4",
"num5", "num6", "num7", "num8",
"num9", "num10"), sep = "[0-9]+\\.") %>%
mutate(fila = row_number()) %>%
mutate(art = case_when(
str_remove(art, "Artículo ") == as.character(fila) ~ art,
TRUE ~ paste0("Artículo ", as.character(fila))
)) %>%
select(-fila) %>%
pivot_longer(2:11, names_to = "num", values_to = "texto") %>%
mutate(texto = str_squish(texto)) %>%
filter(!is.na(texto)) %>%
filter(texto != "") %>%
group_by(art) %>%
mutate(num = row_number()) %>%
ungroup() %>%
mutate(texto = ifelse(str_sub(texto, 1, 1) == ".", str_sub(texto, 2, str_length(texto)), texto),
texto = str_squish(texto))
propuesta_df <- left_join(cap_art, df_const2)
########## test
a <- df_const %>%
#slice(37) %>%
mutate(
ind =  case_when(
str_detect(texto, "\n\n\n") ~ TRUE,
TRUE ~ FALSE),
texto2 = case_when(ind == TRUE ~ str_remove_all(texto, "CONSTITUCIÓN POLÍTICA DE LA REPÚBLICA")),
texto2 = str_squish(texto2),
texto4 = paste(grep('^[a-z]', unlist(unlist(strsplit(texto2, ' '))), value = T), collapse = ' ')
)
a
View(a)
library(pdftools)
library(tidyverse)
library(openxlsx)
# Cargar texto desde pdf
txt <- pdf_text("texto-definitivo-propuesta-nueva-constitucion.pdf")
# Ordenar texto en un data frame
df_const <- tibble()
for (i in 9:178){
df_const <- bind_rows(df_const,
tibble(strsplit(txt[i], "\nA")[[1]]) %>%
rename(texto = 1) %>%
mutate(art = paste0("A", str_sub(texto, 1, 11)),
art = str_remove(art, "\n"),
texto = str_remove_all(texto, str_sub(texto, 1, 11)),
.before = 1)
)
print(i)
}
# Vínculo capítulo-artículo
cap_art <- df_const %>%
filter(str_detect(texto, "CAPÍTULO ") | str_detect(art, "Artículo ")) %>%
mutate(cap = case_when(
str_detect(texto, "CAPÍTULO ") ~ str_squish(str_remove_all(str_remove_all(texto, "\n"), "[0-9].*")))
) %>%
fill(cap, .direction = "down") %>%
select(cap, art) %>%
filter(str_detect(art, "Artículo ")) %>%
mutate(fila = row_number()) %>%
mutate(art = case_when(
str_remove(art, "Artículo ") == as.character(fila) ~ art,
TRUE ~ paste0("Artículo ", as.character(fila))
)) %>%
select(-fila) %>%
mutate(cap = case_when(
!str_detect(cap, "CONSTITUCIÓN POLÍTICA DE") ~ cap)
) %>%
fill(cap, .direction = "up")
# Detalle de artículos
df_const2 <- df_const %>%
filter(str_detect(art, "Artículo")) %>%
separate(texto, into = c("num1", "num2", "num3", "num4",
"num5", "num6", "num7", "num8",
"num9", "num10"), sep = "[0-9]+\\.") %>%
mutate(fila = row_number()) %>%
mutate(art = case_when(
str_remove(art, "Artículo ") == as.character(fila) ~ art,
TRUE ~ paste0("Artículo ", as.character(fila))
)) %>%
select(-fila) %>%
pivot_longer(2:11, names_to = "num", values_to = "texto") %>%
mutate(texto = str_squish(texto)) %>%
filter(!is.na(texto)) %>%
filter(texto != "") %>%
group_by(art) %>%
mutate(num = row_number()) %>%
ungroup() %>%
mutate(texto = ifelse(str_sub(texto, 1, 1) == ".", str_sub(texto, 2, str_length(texto)), texto),
texto = str_squish(texto))
propuesta_df <- left_join(cap_art, df_const2)
propuesta_df %>% write.xlsx("PropuestaConstitucion2022.xlsx")
########## test
a <- df_const %>%
slice(35:38) %>%
mutate(
ind =  case_when(
str_detect(texto, "\n\n\n") ~ TRUE,
TRUE ~ FALSE),
texto2 = case_when(ind == TRUE ~ str_remove_all(texto, "CONSTITUCIÓN POLÍTICA DE LA REPÚBLICA")),
texto2 = str_squish(texto2),
texto4 = paste(grep('^[a-z]', unlist(unlist(strsplit(texto2, ' '))), value = T), collapse = ' ')
)
View(a)
########## test
a <- df_const %>%
slice(35:38) %>%
mutate(
ind =  case_when(
str_detect(texto, "\n\n\n") ~ TRUE,
TRUE ~ FALSE),
texto2 = case_when(ind == TRUE ~ str_remove_all(texto, "CONSTITUCIÓN POLÍTICA DE LA REPÚBLICA")),
texto2 = str_squish(texto2)) %>%
rowwise() %>%
mutate(texto4 = paste(grep('^[a-z]', unlist(unlist(strsplit(texto2, ' '))), value = T), collapse = ' '))
View(a)
########## test
a <- df_const %>%
slice(35:38) %>%
mutate(
ind =  case_when(
str_detect(texto, "\n\n\n") ~ TRUE,
TRUE ~ FALSE),
texto2 = case_when(ind == TRUE ~ str_remove_all(texto, "CONSTITUCIÓN POLÍTICA DE LA REPÚBLICA")),
texto2 = str_squish(texto2)) %>%
rowwise() %>%
mutate(texto4 = paste(grep('^[a-z]', unlist(unlist(strsplit(texto2, ' '))), value = T), collapse = ' ')) %>%
ungroup() %>%
filter(!is.na(texto2))
########## test
a <- df_const %>%
#slice(35:38) %>%
mutate(
ind =  case_when(
str_detect(texto, "\n\n\n") ~ TRUE,
TRUE ~ FALSE),
texto2 = case_when(ind == TRUE ~ str_remove_all(texto, "CONSTITUCIÓN POLÍTICA DE LA REPÚBLICA")),
texto2 = str_squish(texto2)) %>%
rowwise() %>%
mutate(texto4 = paste(grep('^[a-z]', unlist(unlist(strsplit(texto2, ' '))), value = T), collapse = ' ')) %>%
ungroup() %>%
filter(!is.na(texto2))
View(a)
########## test
a <- df_const %>%
#slice(35:38) %>%
mutate(
ind =  case_when(
str_detect(texto, "\n\n\n") ~ TRUE,
TRUE ~ FALSE),
texto2 = case_when(ind == TRUE ~ str_remove_all(texto, "CONSTITUCIÓN POLÍTICA DE LA REPÚBLICA")),
texto2 = str_squish(texto2)) %>%
rowwise() %>%
mutate(texto4 = paste(grep('^[a-z]', unlist(unlist(strsplit(texto2, ' '))), value = T), collapse = ' ')) %>%
ungroup() %>%
select(-texto2)
a
########## test
a <- df_const %>%
#slice(35:38) %>%
mutate(
ind =  case_when(
str_detect(texto, "\n\n\n") ~ TRUE,
TRUE ~ FALSE),
texto2 = case_when(ind == TRUE ~ str_remove_all(texto, "CONSTITUCIÓN POLÍTICA DE LA REPÚBLICA")),
texto2 = str_squish(texto2)) %>%
rowwise() %>%
mutate(texto4 = paste(grep('^[a-z]', unlist(unlist(strsplit(texto2, ' '))), value = T), collapse = ' ')) %>%
ungroup() %>%
select(-texto2) %>%
mutate(texto5 = lag(texto4, 1))
########## test
a <- df_const %>%
#slice(35:38) %>%
mutate(
ind =  case_when(
str_detect(texto, "\n\n\n") ~ TRUE,
TRUE ~ FALSE),
texto2 = case_when(ind == TRUE ~ str_remove_all(texto, "CONSTITUCIÓN POLÍTICA DE LA REPÚBLICA")),
texto2 = str_squish(texto2)) %>%
rowwise() %>%
mutate(texto4 = paste(grep('^[a-z]', unlist(unlist(strsplit(texto2, ' '))), value = T), collapse = ' ')) %>%
ungroup() %>%
select(-texto2) %>%
mutate(texto5 = lead(texto4, 1))
########## test
a <- df_const %>%
#slice(35:38) %>%
mutate(
ind =  case_when(
str_detect(texto, "\n\n\n") ~ TRUE,
TRUE ~ FALSE),
texto2 = case_when(ind == TRUE ~ str_remove_all(texto, "CONSTITUCIÓN POLÍTICA DE LA REPÚBLICA")),
texto2 = str_squish(texto2)) %>%
rowwise() %>%
mutate(texto4 = paste(grep('^[a-z]', unlist(unlist(strsplit(texto2, ' '))), value = T), collapse = ' ')) %>%
ungroup() %>%
select(-texto2) %>%
mutate(texto5 = lead(texto4, 1),
texto6 = paste(texto, texto5))
a <- df_const %>%
#slice(35:38) %>%
mutate(
ind =  case_when(
str_detect(texto, "\n\n\n") ~ TRUE,
TRUE ~ FALSE),
texto2 = case_when(ind == TRUE ~ str_remove_all(texto, "CONSTITUCIÓN POLÍTICA DE LA REPÚBLICA")),
texto2 = str_squish(texto2))
